<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Gordon Shotwell</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Gordon Shotwell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 30 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why I use R</title>
      <link>/posts/why_i_use_r/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/why_i_use_r/</guid>
      <description>They said the war was over… Over the last couple of years prominent members of both the R and Python communities have tried to move past the language wars and support both R and Python workflows. This makes sense intellectually; after all, R and Python are not all that different in the scheme of things, and so we should let people use whichever language they find more productive. This conversation manifests very differently in the workplace, however.</description>
    </item>
    
    <item>
      <title>Technical debt for data scientists</title>
      <link>/posts/2019-04-19-technical-debt-in-data-science/</link>
      <pubDate>Fri, 19 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019-04-19-technical-debt-in-data-science/</guid>
      <description>Technical debt is the process of avoiding work today by promising to do work tomorrow. A team might identify that there’s a small time window for a particular change to be implemented and the only way they can hit that window is to take shortcuts in the development process. They might soberly calculate that the benefits of getting something done now are worth the costs of fixing it later. This kind of technical debt is similar to taking out a mortgage or small business loan.</description>
    </item>
    
    <item>
      <title>Testing machine learning models with testthat</title>
      <link>/posts/model_testing/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/model_testing/</guid>
      <description>Automated testing is a huge part of software development. Once a project reaches a certain level of complexity, the only way that it can be maintained is if it has a set of tests that identify the main functionality and allow you to verify that functionality is intact. Without tests, it’s difficult or impossible to identify where errors are occurring, and to fix those errors without causing further problems.</description>
    </item>
    
    <item>
      <title>Advice for non-traditional data scientists</title>
      <link>/posts/learning_data_science/</link>
      <pubDate>Tue, 29 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/learning_data_science/</guid>
      <description>I have a pretty strange background for a data scientist. In my career I’ve sold electric razors, worked on credit derivatives during the 2008 financial crash, written market reports on orthopaedic biomaterials, and practiced law. I started programming in R during law school, partly as a way to learn more about data visualization and partly to help analyze youth criminal justice data. Over time I came to enjoy programming more than law and decided to make the switch to data work about three years ago.</description>
    </item>
    
    <item>
      <title>Why you should work remotely, even if you&#39;re not remote</title>
      <link>/posts/remote_work/</link>
      <pubDate>Wed, 03 May 2017 21:48:51 -0700</pubDate>
      
      <guid>/posts/remote_work/</guid>
      <description>My last job was as a data scientist at Upworthy, which is a 100% remote company. Prior to starting the position I was worried about whether I could be happy and productive on a remote team. I wondered how project planning would work, whether it would be terribly lonely, and how communication would function when things got hectic. What I discovered is that the company was one of the more efficient and friendly places that I’ve worked, and I think the changes that they have made to accommodate remote work deserve much of the credit.</description>
    </item>
    
    <item>
      <title>Data Visualization and UI design</title>
      <link>/posts/ui_data_analysis/</link>
      <pubDate>Thu, 13 Apr 2017 21:48:51 -0700</pubDate>
      
      <guid>/posts/ui_data_analysis/</guid>
      <description>Over the past couple of months, I’ve been rebuilding the Shambhala Meditation Timer using React Native and Redux. The idea behind the Shambhala app was to create a kind of modular framework for building meditation timers in order to allow people to create complex timers out of simple components. The three build blocks for a timer are time intervals, gong sounds, and recorded audio contemplations, and the user can stack these building blocks to create whatever kind of meditation session they want.</description>
    </item>
    
    <item>
      <title>R for Excel Users</title>
      <link>/posts/r_for_excel_users/</link>
      <pubDate>Thu, 02 Feb 2017 21:48:51 -0700</pubDate>
      
      <guid>/posts/r_for_excel_users/</guid>
      <description>Like most people, I first learned to work with numbers through an Excel spreadsheet. After graduating with an undergraduate philosophy degree, I somehow convinced a medical device marketing firm to give me a job writing Excel reports on the orthopedic biomaterials market. When I first started, I remember not knowing how to anything, but after a few months I became fairly proficient with the tool, and was able to build all sorts of useful models.</description>
    </item>
    
  </channel>
</rss>